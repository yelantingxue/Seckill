<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.seckill.dao.SuccessKilledDao">

    <insert id="insertSuccessKilled">
        <!--if the primary keys conflict, ignore, will not execute insert-->
        INSERT IGNORE INTO success_killed(seckill_id, user_phone, state)
        VALUES (#{seckillId}, #{userPhone}, 0)
    </insert>

    <select id="queryByIdWithSecKill" resultType="SuccessKilled">
        <!--How to tell Mybatis that the return value is SuccessKilled class,
            and there is a SecKill property in the SuccessKilled class.-->

        <!-- As you can see, MyBatis can let you control the SQL
            as the way you like. In another words, MyBatis is very flexible.-->
        SELECT
          sk.seckill_id,
          sk.user_phone,
          sk.state,
          sk.create_time,
          s.seckill_id "seckill.seckill_id",
          s.name "seckill.name",
          s.number "seckill.number",
          s.start_time "seckill.start_time",
          s.end_time "seckill.end_time",
          s.create_time "seckill.create_time"
        FROM success_killed sk
        INNER JOIN seckill s ON sk.seckill_id=s.seckill_id
        WHERE sk.seckill_id = #{seckillId} AND sk.user_phone=#{userPhone}
    </select>

</mapper>